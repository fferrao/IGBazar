// http://ionicframework.com/docs/theming/


// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.
@import url('https://fonts.googleapis.com/css?family=Abel');

h1, h2, h3, h4, h5, h6, span, p, strong, i, em, ion-title {
  font-family: 'Abel', sans-serif !important;
}

#home-link {
  color: white;
  text-decoration: none;
}

.toolbar-background {
  //border-left: 5px solid map-get($colors, primary);
  background-color: rgba(0, 0, 0, 0.85);
}

.title.title-md {
  width: 30%;
  float: left;
}

.sign-in {
  float: right;
  font-size: 1.4em;
  color: white;
  background-color: #262626;
  padding: 10px;
  width: 80%;
  text-align: right;
  position: relative;
  z-index: 999;
  border-bottom: 10px solid map-get($colors, primary);

  background-image: linear-gradient(#9f9f9f 0%, #9f9f9f 6%, #262626 14%, #262626 100%);

  ion-icon {
    font-size: 1em;
    cursor: pointer;
  }

  span {
    cursor: pointer;
  }
}

ion-item {
  background-color: transparent !important;
  height: 100%;
}

ion-spinner * {
  fill: #FFF;
  stroke: #FFF;
}

input, input:active, textarea, textarea:active {
  outline: none !important;
  resize: none;
}

.content-md {
  background-color: map-get($colors, primary);
}

.no-scroll {
  .scroll-content {
    overflow-y: hidden;
  }
}

.modal-wrapper {
  .scroll-content {
    overflow-y: auto !important;
  }
}

.scroll-bar-indicator {
  display: none;
}

.button-md {
  border-radius: 100px;
  border: 3px solid white;
}

.item-md.item-input.ng-valid.item-input-has-value:not(.input-has-focus):not(.item-input-has-focus) .item-inner,
.item-md.item-input.ng-valid.input-has-value:not(.input-has-focus):not(.item-input-has-focus) .item-inner {
  border-bottom-color: map-get($colors, primary);
  box-shadow: inset 0 -1px 0 0 map-get($colors, primary);
}

.item-input-has-focus .label-md[stacked], .input-has-focus .label-md[stacked], .item-input-has-focus
.label-md[floating], .input-has-focus .label-md[floating] {
  color: white;
}

.full-width {
  width: 100% !important;
}

.full-height {
  height: 100% !important;
}